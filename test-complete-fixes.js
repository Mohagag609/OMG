// ุงุฎุชุจุงุฑ ุดุงูู ูุฌููุน ุงูุฅุตูุงุญุงุช
const BASE_URL = 'http://localhost:3000'

async function testCompleteFixes() {
  console.log('๐ ุจุฏุก ุงุฎุชุจุงุฑ ุฌููุน ุงูุฅุตูุงุญุงุช...\n')

  try {
    // 1. ุงุฎุชุจุงุฑ ุญูุธ ูุงุนุฏุฉ ุจูุงูุงุช ุฌุฏูุฏุฉ
    console.log('๐พ 1. ุงุฎุชุจุงุฑ ุญูุธ ูุงุนุฏุฉ ุจูุงูุงุช ุฌุฏูุฏุฉ...')
    const newDbUrl = 'postgresql://neondb_owner:npg_ZBrYxkMEL91f@ep-mute-violet-ad0dmo9y-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require'
    
    const saveResponse = await fetch(`${BASE_URL}/api/database/settings`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        type: 'postgresql',
        connectionString: newDbUrl
      })
    })
    
    const saveData = await saveResponse.json()
    if (saveData.success) {
      console.log('โ ุชู ุญูุธ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุฌุฏูุฏุฉ ุจูุฌุงุญ')
    } else {
      console.log('โ ูุดู ูู ุญูุธ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุฌุฏูุฏุฉ:', saveData.error)
      return
    }

    // 2. ุงุฎุชุจุงุฑ ุชุญููู ุงูุฅุนุฏุงุฏุงุช ุงููุญููุธุฉ
    console.log('\n๐ 2. ุงุฎุชุจุงุฑ ุชุญููู ุงูุฅุนุฏุงุฏุงุช ุงููุญููุธุฉ...')
    const loadResponse = await fetch(`${BASE_URL}/api/database/settings`)
    const loadData = await loadResponse.json()
    
    if (loadData.success) {
      console.log('โ ุชู ุชุญููู ุงูุฅุนุฏุงุฏุงุช ุจูุฌุงุญ:', loadData.data.type)
      console.log('   ููุน ูุงุนุฏุฉ ุงูุจูุงูุงุช:', loadData.data.type)
      console.log('   ุฑุงุจุท ุงูุงุชุตุงู:', loadData.data.connectionString.substring(0, 50) + '...')
    } else {
      console.log('โ ูุดู ูู ุชุญููู ุงูุฅุนุฏุงุฏุงุช:', loadData.error)
    }

    // 3. ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ูุฅูุดุงุก ุฌููุน ุงูุฌุฏุงูู
    console.log('\n๐ 3. ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ูุฅูุดุงุก ุฌููุน ุงูุฌุฏุงูู...')
    const testResponse = await fetch(`${BASE_URL}/api/database/test`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        connectionString: newDbUrl,
        type: 'postgresql'
      })
    })
    
    const testData = await testResponse.json()
    if (testData.success) {
      console.log('โ ุชู ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ูุฅูุดุงุก ุงูุฌุฏุงูู ุจูุฌุงุญ')
      console.log('   ุงูุฌุฏุงูู ุชู ุฅูุดุงุคูุง:', testData.data.tablesCreated)
    } else {
      console.log('โ ูุดู ูู ุงุฎุชุจุงุฑ ุงูุงุชุตุงู:', testData.error)
    }

    // 4. ุงุฎุชุจุงุฑ ุฅุนุงุฏุฉ ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช
    console.log('\n๐ 4. ุงุฎุชุจุงุฑ ุฅุนุงุฏุฉ ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช...')
    const resetResponse = await fetch(`${BASE_URL}/api/database/reset-simple`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      }
    })
    
    const resetData = await resetResponse.json()
    if (resetData.success) {
      console.log('โ ุชู ุฅุนุงุฏุฉ ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ')
    } else {
      console.log('โ ูุดู ูู ุฅุนุงุฏุฉ ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช:', resetData.error)
    }

    // 5. ุงุฎุชุจุงุฑ ุฌููุน ุงูุนูููุงุช ุงูุฃุณุงุณูุฉ
    console.log('\n๐ฅ 5. ุงุฎุชุจุงุฑ ุฌููุน ุงูุนูููุงุช ุงูุฃุณุงุณูุฉ...')
    
    // ุงุฎุชุจุงุฑ ุงูุนููุงุก
    const customersResponse = await fetch(`${BASE_URL}/api/customers`)
    const customersData = await customersResponse.json()
    if (customersData.success) {
      console.log('โ ุงูุนููุงุก:', customersData.data.length, 'ุนููู')
    } else {
      console.log('โ ูุดู ูู ุชุญููู ุงูุนููุงุก:', customersData.error)
    }

    // ุงุฎุชุจุงุฑ ุงููุญุฏุงุช
    const unitsResponse = await fetch(`${BASE_URL}/api/units`)
    const unitsData = await unitsResponse.json()
    if (unitsData.success) {
      console.log('โ ุงููุญุฏุงุช:', unitsData.data.length, 'ูุญุฏุฉ')
    } else {
      console.log('โ ูุดู ูู ุชุญููู ุงููุญุฏุงุช:', unitsData.error)
    }

    // ุงุฎุชุจุงุฑ ุงูุดุฑูุงุก
    const partnersResponse = await fetch(`${BASE_URL}/api/partners`)
    const partnersData = await partnersResponse.json()
    if (partnersData.success) {
      console.log('โ ุงูุดุฑูุงุก:', partnersData.data.length, 'ุดุฑูู')
    } else {
      console.log('โ ูุดู ูู ุชุญููู ุงูุดุฑูุงุก:', partnersData.error)
    }

    // ุงุฎุชุจุงุฑ ุงููุณุทุงุก
    const brokersResponse = await fetch(`${BASE_URL}/api/brokers`)
    const brokersData = await brokersResponse.json()
    if (brokersData.success) {
      console.log('โ ุงููุณุทุงุก:', brokersData.data.length, 'ูุณูุท')
    } else {
      console.log('โ ูุดู ูู ุชุญููู ุงููุณุทุงุก:', brokersData.error)
    }

    // ุงุฎุชุจุงุฑ ุงูุฎุฒุงุฆู
    const safesResponse = await fetch(`${BASE_URL}/api/safes`)
    const safesData = await safesResponse.json()
    if (safesData.success) {
      console.log('โ ุงูุฎุฒุงุฆู:', safesData.data.length, 'ุฎุฒููุฉ')
    } else {
      console.log('โ ูุดู ูู ุชุญููู ุงูุฎุฒุงุฆู:', safesData.error)
    }

    // 6. ุงุฎุชุจุงุฑ ุงูุชุจุฏูู ุฅูู SQLite
    console.log('\n๐ 6. ุงุฎุชุจุงุฑ ุงูุชุจุฏูู ุฅูู SQLite...')
    const sqliteResponse = await fetch(`${BASE_URL}/api/database/settings`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        type: 'sqlite',
        connectionString: 'file:./prisma/dev.db'
      })
    })
    
    const sqliteData = await sqliteResponse.json()
    if (sqliteData.success) {
      console.log('โ ุชู ุงูุชุจุฏูู ุฅูู SQLite ุจูุฌุงุญ')
    } else {
      console.log('โ ูุดู ูู ุงูุชุจุฏูู ุฅูู SQLite:', sqliteData.error)
    }

    // 7. ุงุฎุชุจุงุฑ ุงูุนูุฏุฉ ุฅูู PostgreSQL
    console.log('\n๐ 7. ุงุฎุชุจุงุฑ ุงูุนูุฏุฉ ุฅูู PostgreSQL...')
    const postgresResponse = await fetch(`${BASE_URL}/api/database/settings`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        type: 'postgresql',
        connectionString: newDbUrl
      })
    })
    
    const postgresData = await postgresResponse.json()
    if (postgresData.success) {
      console.log('โ ุชู ุงูุนูุฏุฉ ุฅูู PostgreSQL ุจูุฌุงุญ')
    } else {
      console.log('โ ูุดู ูู ุงูุนูุฏุฉ ุฅูู PostgreSQL:', postgresData.error)
    }

    // 8. ุงุฎุชุจุงุฑ ุงูู refresh (ุชุญููู ุงูุฅุนุฏุงุฏุงุช ูุฑุฉ ุฃุฎุฑู)
    console.log('\n๐ 8. ุงุฎุชุจุงุฑ ุงูู refresh (ุชุญููู ุงูุฅุนุฏุงุฏุงุช ูุฑุฉ ุฃุฎุฑู)...')
    const refreshResponse = await fetch(`${BASE_URL}/api/database/settings`)
    const refreshData = await refreshResponse.json()
    
    if (refreshData.success) {
      console.log('โ ุชู ุชุญููู ุงูุฅุนุฏุงุฏุงุช ุจุนุฏ ุงูู refresh ุจูุฌุงุญ')
      console.log('   ููุน ูุงุนุฏุฉ ุงูุจูุงูุงุช:', refreshData.data.type)
      console.log('   ุฑุงุจุท ุงูุงุชุตุงู:', refreshData.data.connectionString.substring(0, 50) + '...')
      
      if (refreshData.data.type === 'postgresql' && refreshData.data.connectionString === newDbUrl) {
        console.log('โ ุงูุฅุนุฏุงุฏุงุช ูุญููุธุฉ ุจุดูู ุตุญูุญ ููุง ุชุฑุฌุน ูููุงุนุฏุฉ ุงููุฏููุฉ')
      } else {
        console.log('โ ุงูุฅุนุฏุงุฏุงุช ุชุฑุฌุน ูููุงุนุฏุฉ ุงููุฏููุฉ!')
      }
    } else {
      console.log('โ ูุดู ูู ุชุญููู ุงูุฅุนุฏุงุฏุงุช ุจุนุฏ ุงูู refresh:', refreshData.error)
    }

    console.log('\n๐ ุชู ุงุฎุชุจุงุฑ ุฌููุน ุงูุฅุตูุงุญุงุช ุจูุฌุงุญ!')
    console.log('\n๐ ููุฎุต ุงููุชุงุฆุฌ:')
    console.log('โ ุญูุธ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุฌุฏูุฏุฉ - ูุฌุญ')
    console.log('โ ุชุญููู ุงูุฅุนุฏุงุฏุงุช ุงููุญููุธุฉ - ูุฌุญ')
    console.log('โ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ูุฅูุดุงุก ุงูุฌุฏุงูู - ูุฌุญ')
    console.log('โ ุฅุนุงุฏุฉ ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช - ูุฌุญ')
    console.log('โ ุฌููุน ุงูุนูููุงุช ุงูุฃุณุงุณูุฉ - ูุฌุญุช')
    console.log('โ ุงูุชุจุฏูู ุฅูู SQLite - ูุฌุญ')
    console.log('โ ุงูุนูุฏุฉ ุฅูู PostgreSQL - ูุฌุญ')
    console.log('โ ุงูู refresh ูุง ูุฑุฌุน ูููุงุนุฏุฉ ุงููุฏููุฉ - ูุฌุญ')

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ุงูุฅุตูุงุญุงุช:', error)
  }
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑ
testCompleteFixes()