const { execSync } = require('child_process')

console.log('๐ง ุฅุนุฏุงุฏ ุงูุจูุงุก ููุฅูุชุงุฌ...')

try {
  // ุชุญุฏูุฏ ููุน ูุงุนุฏุฉ ุงูุจูุงูุงุช ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
  const schemaPath = process.env.PRISMA_SCHEMA_PATH || 'prisma/schema.postgres.prisma'
  const isSqlite = schemaPath.includes('sqlite')
  
  console.log(`๐ ุงุณุชุฎุฏุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช: ${isSqlite ? 'SQLite' : 'PostgreSQL'}`)
  console.log(`๐ ูุณุงุฑ ุงูุณูููุง: ${schemaPath}`)

  // ุชุดุบูู prisma generate ูุน ุงูุณูููุง ุงูุตุญูุญุฉ
  console.log('๐ฆ ุชูููุฏ Prisma Client...')
  const generateCmd = `PRISMA_SCHEMA_PATH=${schemaPath} npx prisma generate`
  execSync(generateCmd, { stdio: 'inherit' })

  // ุชุดุบูู prisma migrate deploy
  console.log('๐ ุชุทุจูู migrations...')
  const migrateCmd = `PRISMA_SCHEMA_PATH=${schemaPath} npx prisma migrate deploy`
  execSync(migrateCmd, { stdio: 'inherit' })

  // ุชุดุบูู next build
  console.log('๐๏ธ ุจูุงุก ุงูุชุทุจูู...')
  execSync('npx next build', { stdio: 'inherit' })

  console.log('โ ุชู ุงูุจูุงุก ุจูุฌุงุญ!')
} catch (error) {
  console.error('โ ูุดู ูู ุงูุจูุงุก:', error.message)
  console.log('๐ก ุชุฃูุฏ ูู ุฅุนุฏุงุฏ ูุชุบูุฑุงุช ุงูุจูุฆุฉ: DATABASE_URL ู PRISMA_SCHEMA_PATH')
  process.exit(1)
}