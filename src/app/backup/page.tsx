'use client'

import { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'
import { formatCurrency, formatDate } from '@/utils/formatting'

export default function Backup() {
  const [statistics, setStatistics] = useState<any>(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const [creatingBackup, setCreatingBackup] = useState(false)
  const router = useRouter()

  useEffect(() => {
    // Check if user is logged in
    const token = localStorage.getItem('authToken')
    if (!token) {
      router.push('/login')
      return
    }
    
    fetchStatistics()
  }, [])

  const fetchStatistics = async () => {
    try {
      const token = localStorage.getItem('authToken')
      const response = await fetch('/api/backup/list', {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      })

      if (!response.ok) {
        if (response.status === 401) {
          localStorage.removeItem('authToken')
          router.push('/login')
          return
        }
        throw new Error('ูุดู ูู ุชุญููู ุงูุฅุญุตุงุฆูุงุช')
      }

      const data = await response.json()
      if (data.success) {
        setStatistics(data.data)
      } else {
        setError(data.error || 'ุฎุทุฃ ูู ุชุญููู ุงูุฅุญุตุงุฆูุงุช')
      }
    } catch (err) {
      console.error('Statistics error:', err)
      setError('ุฎุทุฃ ูู ุงูุงุชุตุงู')
    } finally {
      setLoading(false)
    }
  }

  const handleCreateBackup = async () => {
    if (!confirm('ูู ุฃูุช ูุชุฃูุฏ ูู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉุ')) {
      return
    }

    setCreatingBackup(true)
    
    try {
      const token = localStorage.getItem('authToken')
      const response = await fetch('/api/backup/create', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`
        }
      })

      const data = await response.json()
      if (data.success) {
        alert('ุชู ุฅูุดุงุก ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ ุจูุฌุงุญ!')
        fetchStatistics()
      } else {
        setError(data.error || 'ุฎุทุฃ ูู ุฅูุดุงุก ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ')
      }
    } catch (err) {
      setError('ุฎุทุฃ ูู ุงูุงุชุตุงู')
    } finally {
      setCreatingBackup(false)
    }
  }

  if (loading) {
    return (
      <div className="container">
        <div className="panel">
          <h2>ุฌุงุฑู ุงูุชุญููู...</h2>
        </div>
      </div>
    )
  }

  return (
    <div className="container">
      <div className="header">
        <div className="brand">
          <div className="logo">๐พ</div>
          <h1>ุฅุฏุงุฑุฉ ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ</h1>
        </div>
        <div className="tools">
          <button 
            className="btn primary" 
            onClick={handleCreateBackup}
            disabled={creatingBackup}
          >
            {creatingBackup ? 'ุฌุงุฑู ุงูุฅูุดุงุก...' : 'ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ'}
          </button>
          <button className="btn secondary" onClick={() => router.push('/')}>
            ุงูุนูุฏุฉ ููุฑุฆูุณูุฉ
          </button>
        </div>
      </div>

      <div className="main-layout">
        <div className="sidebar">
          <button className="tab" onClick={() => router.push('/')}>ููุญุฉ ุงูุชุญูู</button>
          <button className="tab" onClick={() => router.push('/customers')}>ุงูุนููุงุก</button>
          <button className="tab" onClick={() => router.push('/units')}>ุงููุญุฏุงุช</button>
          <button className="tab" onClick={() => router.push('/contracts')}>ุงูุนููุฏ</button>
          <button className="tab" onClick={() => router.push('/brokers')}>ุงูุณูุงุณุฑุฉ</button>
          <button className="tab" onClick={() => router.push('/installments')}>ุงูุฃูุณุงุท</button>
          <button className="tab" onClick={() => router.push('/vouchers')}>ุงูุณูุฏุงุช</button>
          <button className="tab" onClick={() => router.push('/partners')}>ุงูุดุฑูุงุก</button>
          <button className="tab" onClick={() => router.push('/treasury')}>ุงูุฎุฒููุฉ</button>
          <button className="tab" onClick={() => router.push('/reports')}>ุงูุชูุงุฑูุฑ</button>
          <button className="tab active">ูุณุฎุฉ ุงุญุชูุงุทูุฉ</button>
        </div>

        <div className="content">
          <div className="panel">
            <h2>ุฅุญุตุงุฆูุงุช ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ</h2>
            
            {error && <div className="error-message">{error}</div>}
            
            {statistics && (
              <div className="kpis">
                <div className="card">
                  <h3>ุฅุฌูุงูู ุงูุณุฌูุงุช</h3>
                  <div className="big">{statistics.totalRecords}</div>
                </div>
                <div className="card">
                  <h3>ุงูุนููุงุก</h3>
                  <div className="big">{statistics.tableCounts.customers}</div>
                </div>
                <div className="card">
                  <h3>ุงููุญุฏุงุช</h3>
                  <div className="big">{statistics.tableCounts.units}</div>
                </div>
                <div className="card">
                  <h3>ุงูุนููุฏ</h3>
                  <div className="big">{statistics.tableCounts.contracts}</div>
                </div>
                <div className="card">
                  <h3>ุงูุณูุฏุงุช</h3>
                  <div className="big">{statistics.tableCounts.vouchers}</div>
                </div>
                <div className="card">
                  <h3>ุงูุฎุฒุงุฆู</h3>
                  <div className="big">{statistics.tableCounts.safes}</div>
                </div>
                <div className="card">
                  <h3>ุงูุดุฑูุงุก</h3>
                  <div className="big">{statistics.tableCounts.partners}</div>
                </div>
                <div className="card">
                  <h3>ุงูุณูุงุณุฑุฉ</h3>
                  <div className="big">{statistics.tableCounts.brokers}</div>
                </div>
                <div className="card">
                  <h3>ุงูุฃูุณุงุท</h3>
                  <div className="big">{statistics.tableCounts.installments}</div>
                </div>
                <div className="card">
                  <h3>ุงูุฏููู</h3>
                  <div className="big">{statistics.tableCounts.partnerDebts}</div>
                </div>
                <div className="card">
                  <h3>ุงููุณุชุญูุงุช</h3>
                  <div className="big">{statistics.tableCounts.brokerDues}</div>
                </div>
                <div className="card">
                  <h3>ุงูุชุญูููุงุช</h3>
                  <div className="big">{statistics.tableCounts.transfers}</div>
                </div>
              </div>
            )}

            <div className="panel" style={{ marginTop: '20px' }}>
              <h3>ูุนูููุงุช ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ</h3>
              <p>ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ ุชุญุชูู ุนูู ุฌููุน ุงูุจูุงูุงุช ุงููููุฉ ูู ุงููุธุงู.</p>
              <p>ูุชู ุฅูุดุงุก ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ ูู ุงูููุช ุงููุนูู ุนูุฏ ุงูุถุบุท ุนูู ุฒุฑ "ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ".</p>
              <p>ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ ุชุดูู:</p>
              <ul>
                <li>ุฌููุน ุงูุนููุงุก</li>
                <li>ุฌููุน ุงููุญุฏุงุช</li>
                <li>ุฌููุน ุงูุนููุฏ</li>
                <li>ุฌููุน ุงูุณูุฏุงุช</li>
                <li>ุฌููุน ุงูุฎุฒุงุฆู</li>
                <li>ุฌููุน ุงูุดุฑูุงุก ูุงูุณูุงุณุฑุฉ</li>
                <li>ุฌููุน ุงูุฃูุณุงุท ูุงูุฏููู</li>
                <li>ุฌููุน ุงูุชุญูููุงุช</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}